// Code generated by MockGen. DO NOT EDIT.
// Source: database/truncator.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTruncator is a mock of Truncator interface.
type MockTruncator struct {
	ctrl     *gomock.Controller
	recorder *MockTruncatorMockRecorder
}

// MockTruncatorMockRecorder is the mock recorder for MockTruncator.
type MockTruncatorMockRecorder struct {
	mock *MockTruncator
}

// NewMockTruncator creates a new mock instance.
func NewMockTruncator(ctrl *gomock.Controller) *MockTruncator {
	mock := &MockTruncator{ctrl: ctrl}
	mock.recorder = &MockTruncatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTruncator) EXPECT() *MockTruncatorMockRecorder {
	return m.recorder
}

// Truncate mocks base method.
func (m *MockTruncator) Truncate(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Truncate", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// Truncate indicates an expected call of Truncate.
func (mr *MockTruncatorMockRecorder) Truncate(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Truncate", reflect.TypeOf((*MockTruncator)(nil).Truncate), ctx)
}
